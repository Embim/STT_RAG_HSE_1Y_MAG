"""
–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ª–µ–∫—Ü–∏—è–º
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—É—é –±–∞–∑—É Weaviate
"""

from rag_pipeline import EmbeddingModel, WeaviateIndexer, RAGRetriever


def main():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –ª–µ–∫—Ü–∏—è–º"""

    print("=" * 80)
    print("–ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –ü–û–ò–°–ö –ü–û –õ–ï–ö–¶–ò–Ø–ú")
    print("=" * 80)
    print("\n–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–∏—Å—Ç–µ–º–µ...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    try:
        embedding_model = EmbeddingModel()
        indexer = WeaviateIndexer(url="http://localhost:8080")
        indexer.connect()
        retriever = RAGRetriever(indexer, embedding_model)
        print("‚úì –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!\n")
    except Exception as e:
        print(f"\n‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        print("\n–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
        print("1. Weaviate –∑–∞–ø—É—â–µ–Ω (docker run ...)")
        print("2. –ü–∞–π–ø–ª–∞–π–Ω –±—ã–ª –∑–∞–ø—É—â–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞–∑ (python rag_pipeline.py)")
        return

    print("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    print("–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:")
    print("  - –ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?")
    print("  - –ö–∞–∫–∏–µ –±—ã–≤–∞—é—Ç —Ç–∏–ø—ã –ø—Ä–∏–∑–Ω–∞–∫–æ–≤?")
    print("  - –†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏")
    print("-" * 80)

    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            query = input("\nüîç –í–∞—à –∑–∞–ø—Ä–æ—Å: ").strip()

            if not query:
                continue

            if query.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥']:
                print("\n–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break

            # –ü–æ–∏—Å–∫
            print("\n–ü–æ–∏—Å–∫...")
            results = retriever.retrieve(query, top_k=5)

            # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            retriever.display_results(results)

        except KeyboardInterrupt:
            print("\n\n–ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except Exception as e:
            print(f"\n‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    indexer.close()


if __name__ == "__main__":
    main()
